//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WarHammer40kDBEntities : DbContext
    {
        public WarHammer40kDBEntities()
            : base("name=WarHammer40kDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Faction> Factions { get; set; }
        public virtual DbSet<SubFaction> SubFactions { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<UnitType> UnitTypes { get; set; }
    
        public virtual int InsertUnit(Nullable<int> eUnitTypeID, Nullable<int> eSubFactionID, string eName, Nullable<int> eUnitValue)
        {
            var eUnitTypeIDParameter = eUnitTypeID.HasValue ?
                new ObjectParameter("EUnitTypeID", eUnitTypeID) :
                new ObjectParameter("EUnitTypeID", typeof(int));
    
            var eSubFactionIDParameter = eSubFactionID.HasValue ?
                new ObjectParameter("ESubFactionID", eSubFactionID) :
                new ObjectParameter("ESubFactionID", typeof(int));
    
            var eNameParameter = eName != null ?
                new ObjectParameter("EName", eName) :
                new ObjectParameter("EName", typeof(string));
    
            var eUnitValueParameter = eUnitValue.HasValue ?
                new ObjectParameter("EUnitValue", eUnitValue) :
                new ObjectParameter("EUnitValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUnit", eUnitTypeIDParameter, eSubFactionIDParameter, eNameParameter, eUnitValueParameter);
        }
    }
}
